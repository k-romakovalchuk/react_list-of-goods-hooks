{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isShowedGoods","setShowedGoods","isReversed","setReversed","isSortBy","setSortBy","newGoods","sort","g1","g2","localeCompare","length","reverse","className","type","onClick","map","good","revers","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyFaC,EAtFO,WACpB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAiBC,EAAjB,KAeMC,EAAQ,UAAOT,GAiBrB,OAfAS,EAASC,MAAK,SAACC,EAAIC,GACjB,OAAQL,GACN,IAAK,QACH,OAAOI,EAAGE,cAAcD,GAC1B,IAAK,SACH,OAAOD,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITT,GACFI,EAASM,UAIT,sBAAKC,UAAU,MAAf,UACE,wCACmB,IAAlBb,EAEG,wBACEc,KAAK,SACLC,QArCW,kBAAMd,GAAe,IAmClC,mBAQA,qCACE,6BACGK,EAASU,KAAI,SAAAC,GAAI,OAChB,6BACGA,GADMA,QAKb,wBACEH,KAAK,SACLC,QAnDS,kBAAMZ,GAAY,SAAAe,GAAM,OAAKA,MAiDxC,qBAMA,wBACEJ,KAAK,SACLC,QAvDW,kBAAMV,EAAU,UAqD7B,iCAMA,wBACES,KAAK,SACLC,QA3DS,kBAAMV,EAAU,WAyD3B,4BAMA,wBACES,KAAK,SACLC,QA/DU,WACpBV,EAAU,IACVF,GAAY,IA2DJ,0BCvFZgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.0730a741.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isShowedGoods, setShowedGoods] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [isSortBy, setSortBy] = useState('');\n\n  const showTheGoods = () => setShowedGoods(true);\n\n  const reverseGoods = () => setReversed(revers => !revers);\n\n  const sortByAlphabet = () => setSortBy('Alpha');\n\n  const sortByLength = () => setSortBy('Length');\n\n  const resetTheGoods = () => {\n    setSortBy('');\n    setReversed(false);\n  };\n\n  const newGoods = [...goodsFromServer];\n\n  newGoods.sort((g1, g2) => {\n    switch (isSortBy) {\n      case 'Alpha':\n        return g1.localeCompare(g2);\n      case 'Length':\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    newGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {isShowedGoods === false\n        ? (\n          <button\n            type=\"button\"\n            onClick={showTheGoods}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <ul>\n              {newGoods.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              type=\"button\"\n              onClick={reverseGoods}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={sortByAlphabet}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={sortByLength}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              onClick={resetTheGoods}\n            >\n              Reset\n            </button>\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}